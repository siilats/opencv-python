name: macOS ARM64

on:
  pull_request:
    branches:
      - 4.x
    paths-ignore:
      - '.github/workflows/build_wheels_linux*'
      - '.github/workflows/build_wheels_windows*'
      - '.github/workflows/build_wheels_macos.yml'
  release:
    types: [published, edited]
  workflow_dispatch:

jobs:
  Build:
    runs-on: python-macos11-m1
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10']
        platform: [x64]
        with_contrib: [0]
        without_gui: [0]
        build_sdist: [0]
    env:
      CI_BUILD: 1
      SDIST: ${{ matrix.build_sdist || 0 }}
      ENABLE_HEADLESS: ${{ matrix.without_gui }}
      ENABLE_CONTRIB: ${{ matrix.with_contrib }}
      PIP_INDEX_URL: https://pypi.tuna.tsinghua.edu.cn/simple
    steps:
    - name: Cleanup
      run: find . -mindepth 1 -delete
      working-directory: ${{ github.workspace }}
    - name: Setup environment
      run: |
        if [[ "${{ github.event_name }}" == "schedule" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "ENABLE_ROLLING=1" >> $GITHUB_ENV
        fi
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: false
        fetch-depth: 0
    - name: Build a package
      run: |
        git submodule update --init multibuild
        echo $ENABLE_CONTRIB > contrib.enabled
        echo $ENABLE_HEADLESS > headless.enabled
        export MACOSX_DEPLOYMENT_TARGET=11.0
        arch -arm64 python${{ matrix.python-version }} -m pip install toml && python${{ matrix.python-version }} -c 'import toml; c = toml.load("pyproject.toml"); print("\n".join(c["build-system"]["requires"]))' | python${{ matrix.python-version }} -m pip install -r /dev/stdin
        arch -arm64 python${{ matrix.python-version }} setup.py bdist_wheel --py-limited-api=cp37 --dist-dir=wheelhouse -v
        delocate-wheel ${{ github.workspace }}/wheelhouse/opencv*
    - name: Saving all wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: wheelhouse/opencv*.whl
    - name: Saving a wheel accordingly to matrix
      uses: actions/upload-artifact@v3
      with:
        name: wheel-${{ matrix.with_contrib }}-${{ matrix.without_gui }}-${{ matrix.build_sdist }}
        path: wheelhouse/opencv*.whl
